// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// init
void init();
RcppExport SEXP _Rmmquant_init() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    init();
    return R_NilValue;
END_RCPP
}
// printUsage
void printUsage();
RcppExport SEXP _Rmmquant_printUsage() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    printUsage();
    return R_NilValue;
END_RCPP
}
// printState
void printState();
RcppExport SEXP _Rmmquant_printState() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    printState();
    return R_NilValue;
END_RCPP
}
// setGtfFileName
void setGtfFileName(std::string& s);
RcppExport SEXP _Rmmquant_setGtfFileName(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type s(sSEXP);
    setGtfFileName(s);
    return R_NilValue;
END_RCPP
}
// addReadsFileName
void addReadsFileName(std::string& s);
RcppExport SEXP _Rmmquant_addReadsFileName(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type s(sSEXP);
    addReadsFileName(s);
    return R_NilValue;
END_RCPP
}
// addName
void addName(std::string& s);
RcppExport SEXP _Rmmquant_addName(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type s(sSEXP);
    addName(s);
    return R_NilValue;
END_RCPP
}
// setOutputFileName
void setOutputFileName(std::string& s);
RcppExport SEXP _Rmmquant_setOutputFileName(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type s(sSEXP);
    setOutputFileName(s);
    return R_NilValue;
END_RCPP
}
// setOverlap
void setOverlap(float f);
RcppExport SEXP _Rmmquant_setOverlap(SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type f(fSEXP);
    setOverlap(f);
    return R_NilValue;
END_RCPP
}
// addStrand
int addStrand(std::string& s);
RcppExport SEXP _Rmmquant_addStrand(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(addStrand(s));
    return rcpp_result_gen;
END_RCPP
}
// addSort
int addSort(std::string& s);
RcppExport SEXP _Rmmquant_addSort(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(addSort(s));
    return rcpp_result_gen;
END_RCPP
}
// setCountThreshold
void setCountThreshold(unsigned int u);
RcppExport SEXP _Rmmquant_setCountThreshold(SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type u(uSEXP);
    setCountThreshold(u);
    return R_NilValue;
END_RCPP
}
// setMergeThreshold
void setMergeThreshold(float f);
RcppExport SEXP _Rmmquant_setMergeThreshold(SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type f(fSEXP);
    setMergeThreshold(f);
    return R_NilValue;
END_RCPP
}
// setPrintGeneName
void setPrintGeneName(bool b);
RcppExport SEXP _Rmmquant_setPrintGeneName(SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type b(bSEXP);
    setPrintGeneName(b);
    return R_NilValue;
END_RCPP
}
// setFeatureCountStyle
void setFeatureCountStyle(bool b);
RcppExport SEXP _Rmmquant_setFeatureCountStyle(SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type b(bSEXP);
    setFeatureCountStyle(b);
    return R_NilValue;
END_RCPP
}
// setProgress
void setProgress(bool b);
RcppExport SEXP _Rmmquant_setProgress(SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type b(bSEXP);
    setProgress(b);
    return R_NilValue;
END_RCPP
}
// setNThreads
void setNThreads(int n);
RcppExport SEXP _Rmmquant_setNThreads(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    setNThreads(n);
    return R_NilValue;
END_RCPP
}
// addFormat
int addFormat(std::string& s);
RcppExport SEXP _Rmmquant_addFormat(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(addFormat(s));
    return rcpp_result_gen;
END_RCPP
}
// setNOverlapDifference
void setNOverlapDifference(int n);
RcppExport SEXP _Rmmquant_setNOverlapDifference(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    setNOverlapDifference(n);
    return R_NilValue;
END_RCPP
}
// setPcOverlapDifference
void setPcOverlapDifference(float f);
RcppExport SEXP _Rmmquant_setPcOverlapDifference(SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type f(fSEXP);
    setPcOverlapDifference(f);
    return R_NilValue;
END_RCPP
}
// start
NumericMatrix start();
RcppExport SEXP _Rmmquant_start() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(start());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rmmquant_init", (DL_FUNC) &_Rmmquant_init, 0},
    {"_Rmmquant_printUsage", (DL_FUNC) &_Rmmquant_printUsage, 0},
    {"_Rmmquant_printState", (DL_FUNC) &_Rmmquant_printState, 0},
    {"_Rmmquant_setGtfFileName", (DL_FUNC) &_Rmmquant_setGtfFileName, 1},
    {"_Rmmquant_addReadsFileName", (DL_FUNC) &_Rmmquant_addReadsFileName, 1},
    {"_Rmmquant_addName", (DL_FUNC) &_Rmmquant_addName, 1},
    {"_Rmmquant_setOutputFileName", (DL_FUNC) &_Rmmquant_setOutputFileName, 1},
    {"_Rmmquant_setOverlap", (DL_FUNC) &_Rmmquant_setOverlap, 1},
    {"_Rmmquant_addStrand", (DL_FUNC) &_Rmmquant_addStrand, 1},
    {"_Rmmquant_addSort", (DL_FUNC) &_Rmmquant_addSort, 1},
    {"_Rmmquant_setCountThreshold", (DL_FUNC) &_Rmmquant_setCountThreshold, 1},
    {"_Rmmquant_setMergeThreshold", (DL_FUNC) &_Rmmquant_setMergeThreshold, 1},
    {"_Rmmquant_setPrintGeneName", (DL_FUNC) &_Rmmquant_setPrintGeneName, 1},
    {"_Rmmquant_setFeatureCountStyle", (DL_FUNC) &_Rmmquant_setFeatureCountStyle, 1},
    {"_Rmmquant_setProgress", (DL_FUNC) &_Rmmquant_setProgress, 1},
    {"_Rmmquant_setNThreads", (DL_FUNC) &_Rmmquant_setNThreads, 1},
    {"_Rmmquant_addFormat", (DL_FUNC) &_Rmmquant_addFormat, 1},
    {"_Rmmquant_setNOverlapDifference", (DL_FUNC) &_Rmmquant_setNOverlapDifference, 1},
    {"_Rmmquant_setPcOverlapDifference", (DL_FUNC) &_Rmmquant_setPcOverlapDifference, 1},
    {"_Rmmquant_start", (DL_FUNC) &_Rmmquant_start, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rmmquant(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
